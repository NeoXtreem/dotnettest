@tailwind base;
@tailwind components;
@tailwind utilities;

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}
.h-noheader {
  min-height: calc( 100vh - 74px );
}
fieldset:disabled input, fieldset:disabled label, fieldset:disabled button {
  pointer-events: none;
  cursor: not-allowed;
  opacity: 0.35;
  filter: alpha(opacity=35);
  -webkit-box-shadow: none;
  box-shadow: none;
}
.maintitles {
  @apply text-6xl font-black purplefade md:text-8xl;
}
.tabledata {
  @apply text-sm lg:text-2xl text-left px-1 py-4 md:px-8;
}
.table td {
  @apply text-sm lg:text-2xl px-1 md:px-4;
}
.table th {
  @apply ml-0 text-xs lg:text-xl px-1 md:px-4;
}
.hidemd {
  @apply block md:hidden;
}
.showmd {
  @apply hidden md:block lg:hidden;
}
.hidesm {
  @apply hidden md:block;
}
.hidesmmd {
  @apply hidden lg:block;
}
.textfade {
  @apply bg-clip-text text-transparent bg-gradient-to-r;
}
.purplefade {
  @apply textfade from-purple-800 to-purple-500;
}
.greenfade {
  @apply textfade from-green-600 to-green-400;
}

.stats {
  @apply w-full grid-flow-row lg:grid-flow-col my-6 md:my-10;
}


.stats.stats .stat+.stat {
  border-left-width: 0;
  border-top-width: 1px;
  @apply border-neutral-focus;
}
.stat {
  @apply place-items-center place-content-center border-neutral-focus;

}
.stat-value {
  @apply text-3xl xl:text-5xl;
}
.stat-title, .card-title {
  @apply uppercase;
}
.staketitle {
  @apply uppercase;
}
.topstats .stat-title, .staketitle {
  @apply text-secondary font-bold;
}
.bottomstats .stat-title {
  @apply font-bold;
}
.topstats .stat {
  @apply bg-base-100;
}
.bottomstats .stat {
  @apply bg-base-200;
}

.headingfont {
  @apply text-3xl md:text-5xl font-bold mb-6 md:mb-10;
}
.withdrawstake{
  @apply input pl-1 md:pl-4 pr-11 md:pr-32 lg:pr-40 xl:pr-64 w-full input-bordered text-white;
}
.withdrawinput{
  @apply input-secondary withdrawstake text-sm lg:text-base xl:text-2xl text-left;
}
.stakeinput {
  @apply input-accent withdrawstake text-xl;
}
.fullhalfwidth {
  @apply w-full md:w-1/2;
}
.label-text {
  @apply text-lg text-white text-left mt-5 mb-2 uppercase font-bold;
}


@keyframes blink {
  /**
   * At the start of the animation the dot
   * has an opacity of .2
   */
  0% {
    opacity: .2;
  }
  /**
   * At 20% the dot is fully visible and
   * then fades out slowly
   */
  20% {
    opacity: 1;
  }
  /**
   * Until it reaches an opacity of .2 and
   * the animation can start again
   */
  100% {
    opacity: .2;
  }
}

.loading span {
  /**
   * Use the blink animation, which is defined above
   */
  animation-name: blink;
  /**
   * The animation should take 1.4 seconds
   */
  animation-duration: 1.4s;
  /**
   * It will repeat itself forever
   */
  animation-iteration-count: infinite;
  /**
   * This makes sure that the starting style (opacity: .2)
   * of the animation is applied before the animation starts.
   * Otherwise we would see a short flash or would have
   * to set the default styling of the dots to the same
   * as the animation. Same applies for the ending styles.
   */
  animation-fill-mode: both;
}

.loading span:nth-child(2) {
  /**
   * Starts the animation of the third dot
   * with a delay of .2s, otherwise all dots
   * would animate at the same time
   */
  animation-delay: .2s;
}

.loading span:nth-child(3) {
  /**
   * Starts the animation of the third dot
   * with a delay of .4s, otherwise all dots
   * would animate at the same time
   */
  animation-delay: .4s;
}